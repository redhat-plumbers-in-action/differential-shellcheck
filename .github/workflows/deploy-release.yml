---
# Inspired by: https://github.com/github/super-linter/blob/main/.github/workflows/deploy-release.yml

name: Deploy Release
on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      release_version:
        description: 'version to release. Ex: v4.3.2'
        required: true
        default: 'v'

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Deploy Docker Image - Release

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        images:
          - container-image-id-prefix: ""
            deployment-environment-identifier: Release
            image-id: standard

    timeout-minutes: 60

    steps:
      - name: Repository checkout
        uses: actions/checkout@v3

      - name: Get current date
        run: |
          echo "Appending the build date contents to GITHUB_ENV..."
          echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "${GITHUB_ENV}"

      - name: Setup BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current Release number
        # shellcheck disable=SC2062
        run: |
          RELEASE_VERSION=$(echo ${{ github.event.release.name }} \
          | grep -E -o "v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+")
          echo "$RELEASE_VERSION" >> "${GITHUB_ENV}"
          if [ -z "${RELEASE_VERSION}" ]; then
            echo "No release version found in environment, using input..."
            echo "RELEASE_VERSION=${{ github.event.inputs.release_version }}" \
            >> "${GITHUB_ENV}"
          fi

      - name: Start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ matrix.images.deployment-environment-identifier }}

      - name: Build Docker image - ${{ matrix.images.image-id }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            BUILD_REVISION=${{ github.sha }}
            BUILD_VERSION=${{ github.sha }}
          load: false
          push: true
          # !FIXME - Avoid using hardcoded `v2`
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.images.container-image-id-prefix }}latest
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.images.container-image-id-prefix }}v2
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ matrix.images.container-image-id-prefix }}${{ env.RELEASE_VERSION }}

      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env: ${{ steps.deployment.outputs.env }}
          env_url: https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_VERSION }}
